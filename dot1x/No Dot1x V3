#Int Modules
import os
import re
from ciscoconfparse import CiscoConfParse
from netmiko import ConnectHandler

#set Vars
header = "Switch"+ "        " + "Port W/O Dot1x" +"          "+ "Port Description"

#Set Switch Config Location
root = "/home/jbowers/Nodot1x/Configs"

#Rename Files in the root location
print("-------------------Starting to remove -Running.config from file name-----------------")
for file in os.listdir(root):
    infilename = os.path.join(root,file)
    if not os.path.isfile(infilename): continue
    oldbase = os.path.splitext(file)
    infile = (infilename, 'r')
    newname = infilename.replace('-Running.Config', '')
    output = os.rename(infilename, newname)
    outfile = (output,'w')
print(" ")
print("-------------------Finshed removing -Running.config from file name-------------------")
print(" ")
print("-------------------Starting to find ports with Dot1x disabled------------------------")
print(" ")
print(header)

for file in os.listdir(root):
    if not file.startswith("P"):
        continue
    config_path = os.path.join(root, file)
    parse = CiscoConfParse(config_path)
    all_intfs = parse.find_objects(r"^interf")
    NoDot1x = list()
    NoDot1x = parse.find_objects_wo_child(r'^interface', r'authentication')

    #Remove Non Gig Ports because all user ports are 1 gig
    GigPorts = [x.text.split()[1] for x in NoDot1x if x.text.startswith("interface Gig")]

    #Remove Cisco 3750 Exansion module
    final_list=[w for w in GigPorts if not re.match(r'GigabitEthernet./1/.', w)]
   # print(file)
   # print(final_list)
    
    #Netmiko Gets Port Descriptions
    for t in final_list:
       port= ''.join(t)
       if port.startswith('GigabitEthernet'):
          cmd = 'show run int {0} | i desc' .format(port)
          net_connect = ConnectHandler(device_type='cisco_ios', host=file, username='gdfgdfg', password='dfgdfgdg') 
          desc = net_connect.send_command(cmd)
          result = file +'   ' + ''.join(port)+ "   " + desc
          print(result)
       else:
          result = file + "All user ports have 802.1x enabled"
          print (result)

print("-------------------The script has finished------------------------")






My attempt to travel down directories.

#Int Modules
import os
import re
from ciscoconfparse import CiscoConfParse
from netmiko import ConnectHandler

#set Vars
header = "Switch"+ "        " + "Port W/O Dot1x" +"          "+ "Port Description"

#Rename Files in the root location
print("-------------------Starting to remove -Running.config from file name-----------------")
configs = ['/home/jbowers/Nodot1x/Configs/']
for file in configs:
    for root, dirs, files in os.walk(file, topdown=True):
          infilename = os.path.join(root + files)
          if not os.path.isfile(infilename): continue
          oldbase = os.path.splitext(file)
          infile = (infilename, 'r')
          newname = infilename.replace('-Running.Config', '')
          output = os.rename(infilename, newname)
          outfile = (output,'w')
print(" ")
print("-------------------Finshed removing -Running.config from file name-------------------")
print(" ")
print("-------------------Starting to find ports with Dot1x disabled------------------------")
print(" ")


fails with

-bash-4.2$ python3.6 test2.py 
-------------------Starting to remove -Running.config from file name-----------------
Traceback (most recent call last):
  File "test2.py", line 16, in <module>
    infilename = os.path.join(root + files)
TypeError: must be str, not list





















