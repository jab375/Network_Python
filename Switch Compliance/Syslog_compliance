##
##Int Modules
##
import os
import re
import shutil
import pathlib

##Start Examining configs for missing logging commands

##Define Linux Directory to vars
dir = "/opt/switch_compliance/configs"
dir2 = "/opt/switch_compliance/sh_commands"
##Define IOS Commands to Vars
log1 ="logging discriminator DENY_LOG facility drops DOT1X mnemonics drops FAIL"
log2 ="logging buffered discriminator DENY_LOG 32768 informational"
log3 ="logging console discriminator DENY_LOG informational"
log4 ="logging monitor discriminator DENY_LOG informational"
log5 ="logging host 1.1.2.9 discriminator DENY_LOG"
log6 ="logging host 1.1.1.2 discriminator DENY_LOG"
ignore1 = "logging synchronous"
ignore2 = "logging source-interface"
#####################################################################Syslog Checks
#####################################################################
print("")
print("Syslog Config Checks")
for host in os.listdir(dir):
    if host.startswith("pvl") or host.startswith("svl") or host.startswith("ptel"):
      config_path = os.path.join(dir, host)
      f = open(config_path)
      line = f.read()

##Check for NTP Configuration
      for x in re.findall('logging''.*', line):
          if x.find(log1) or x.find(log2) or x.find(log3) or x.find(log4) or x.find(log5) or x.find(log):        
             p= "No Action Needed"
          else:
             print(host, "is missing: ", x)

          if not x.find(log1) or not x.find(log2) or not x.find(log3) or not x.find(log4) or not x.find(log5) or not x.find(log6) or x.find(ignore1) or x.find(ignore2):
             p= "No Action Needed"
          else:
             print(host, "has excessive configuration: ", x)
