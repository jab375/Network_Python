##
##Int Modules
##
import os
import re
import shutil
import pathlib

##Start Examining configs for missing logging commands

##Define Linux Directory to vars
dir = "/opt/switch_compliance/configs"
dir2 = "/opt/switch_compliance/sh_commands"
##Define IOS Commands to Vars
ntp1 ="ntp server 172.25.30.11"
ntp2 ="ntp server 192.168.30.21 prefer"
ntp3 ="ntp server vrf Mgmt-intf 172.25.30.11"
ntp4 ="ntp server vrf Mgmt-intf 192.168.30.21 prefer"
ign1 = "ntp"
ign2 = "ntp master"
ign3 = "ntp update-calendar"
ign4 = "ntp source GigabitEthernet0"

print("")
##Check Excessive NTP Config
for host in os.listdir(dir):
    if host.startswith("pvl") or host.startswith("svl") or host.startswith("ptel"):
      config_path = os.path.join(dir, host)
      with open(config_path) as file:
           for line in file:
               line = line.rstrip()
               for x in re.findall('ntp''.*', line):
                  if ntp1 == line or ntp2 == line or ntp3 == line or ntp4 == line or ign1 == line or ign2 == line or ign3 == line or ign4 == line:
                     p = "No Action Needed"   
                  else:
                     print (host, "has excessive NTP configuration: ", line)      
                  
##Check for Missing NTP Commands
for host in os.listdir(dir):
    if host.startswith("pvl") or host.startswith("svl") or host.startswith("ptel"):
      config_path = os.path.join(dir, host)
      with open(config_path) as file:
           if any(line == ntp1 for line in file) or any(line == ntp3 for line in file):
              p=0
           else:
              print(host, "missing", ntp1)
              print(line)
           if any(line == ntp2 for line in file) or any(line == ntp4 for line in file):
              p=0
           else:
              print(host, "missing", ntp2) 
              print(line)

##Check NTP Status
for host in os.listdir(dir2):
    if host.startswith("pvl") or host.startswith("svl") or host.startswith("ptel"):
       config_path = os.path.join(dir2, host)
       f = open(config_path)
       line = f.read()
       if re.search(r'.INIT.', line) or re.search(r'Invalid', line):
          print(host, "Has A Bad NTP Server Connection")
       else:
          p=0
    else:
       p=0
       
       
       
Output
switch1 missing ntp server xxxxxxx
end
switch1 missing ntp server xxxxxxx prefer
end
